node n1 {
    type router
    model host
    network-config {
	hostname n1
	!
	interface eth0
	 mac address 00:00:00:00:00:01
	 ip address 192.168.64.12/28
	!
    }
    canvas c1
    iconcoords {268.0 29.0}
    labelcoords {268.0 61.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 192.168.64.14
	
	}
    }
    services {DefaultRoute}
}

node n2 {
    type router
    model host
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 192.168.64.3/29
	!
    }
    canvas c1
    iconcoords {536.0 156.0}
    labelcoords {536.0 188.0}
    interface-peer {eth0 n5}
}

node n4 {
    type router
    model host
    network-config {
	hostname n4
	!
	interface eth0
	 ip address 192.168.64.10/29
	!
    }
    canvas c1
    iconcoords {267.0 280.0}
    labelcoords {267.0 312.0}
    interface-peer {eth0 n5}
    services {DefaultRoute}
}

node n5 {
    type router
    model router
    network-config {
	hostname n5
	!
	interface eth1
	 ip address 192.168.64.1/29
	!
	interface eth0
	 ip address 192.168.64.14/28
	!
	interface eth2
	 ip address 192.168.64.9/29
	!
    }
    canvas c1
    iconcoords {268.0 156.0}
    labelcoords {268.0 188.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n2}
    interface-peer {eth2 n4}
    services {zebra IPForward}
}

link l1 {
    nodes {n1 n5}
    bandwidth 0
}

link l2 {
    nodes {n5 n2}
    bandwidth 0
}

link l3 {
    nodes {n5 n4}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

